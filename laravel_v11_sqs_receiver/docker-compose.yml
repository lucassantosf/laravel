version: "3.3"

services:
  nginx_receiver:
    build: 
      context: .
      dockerfile: ./environment/nginx/Dockerfile
    image: ngnix
    container_name: nginx_receiver
    tty: true
    ports:
      - "8001:80"
    volumes:
      - ./environment/nginx/default-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./environment/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks: 
      application-network:
        ipv4_address: 20.1.0.11
    depends_on: 
      - "application_receiver"

  application_receiver:
    build:
      context: .
      dockerfile: ./environment/application/Dockerfile
    image: application_receiver
    container_name: application_receiver
    environment:
      CONTAINER_ROLE: app 
    volumes:
      - ./:/var/www/html
      - ./environment/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    working_dir: /var/www/html
    command: php-fpm
    ports:
      - "9000"
    networks: 
      application-network:
        ipv4_address: 20.1.0.12
    depends_on: 
      - "mysql_receiver"

  mysql_receiver:
    image: mysql:8.0.36
    command: --max_allowed_packet=32505856
    container_name: mysql_receiver
    hostname: mysql_receiver
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - /home/lucas/volumes/receiver/mysql/data/db/:/var/lib/mysql/
      - /home/lucas/volumes/receiver/mysql/dump/:/docker-entrypoint-initdb.d/ 
    networks:
      application-network:
        ipv4_address: 20.1.0.13
  
  supervisor_receiver: 
    image: application_receiver
    container_name: supervisor_receiver
    environment:
      CONTAINER_ROLE: default-queue  
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html  
    networks: 
      application-network:
        ipv4_address: 20.1.0.14
    depends_on: 
      - "mysql_receiver"

networks:
  application-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 20.1.0.0/24
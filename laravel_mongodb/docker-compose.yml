version: "3.3"

services:
  nginx:
    build: 
        context: .
        dockerfile: ./environment/nginx/Dockerfile
    image: ngnix
    container_name: nginx
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ./environment/nginx/default-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./environment/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks: 
      application-network:
        ipv4_address: 17.1.0.101
    depends_on: 
      - "application"

  application:
    build:
      context: .
      dockerfile: ./environment/application/Dockerfile
    image: application
    container_name: application
    volumes:
      - ./:/var/www/html
      - ./environment/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    working_dir: /var/www/html
    command: php-fpm
    ports:
      - "9000"
    networks: 
      application-network:
        ipv4_address: 17.1.0.102 
    depends_on: 
      - "sqlserver"

  mongo:
    # build:
    #   context: ./
    #   dockerfile: ./environment/mongo/Dockerfile
    image: mongo:4.2.8
    command: [--auth]
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=zHgb8sH5F523rwR
      - MONGO_INITDB_USERNAME=${MONGO_USR}
      - MONGO_INITDB_PASSWORD=${MONGO_PWD}
      - MONGO_INITDB_DATABASE=${MONGO_AUTHDB}
    volumes:
      - ./environment/mongo/data/db:/data/db
      - ./environment/mongo/data/entries/:/docker-entrypoint-initdb.d/
    container_name: mongo
    ports:
      - "27017"
    networks:
      yetz-network:
        ipv4_address: 10.1.0.102

networks:
  application-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 17.1.0.0/24